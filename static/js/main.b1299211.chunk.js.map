{"version":3,"sources":["utils/constants.js","components/ThemeSwitch/index.js","components/ThemeSwitch/ThemeSwitch.jsx","components/Header/index.js","components/Header/Header.jsx","components/TodoContainer/TodoAdd/index.js","components/TodoContainer/TodoAdd/TodoAdd.jsx","components/TodoContainer/TodoList/index.js","components/TodoContainer/TodoList/TodoList.jsx","components/TodoContainer/index.js","components/TodoContainer/TodoContainer.jsx","app.js","index.js"],"names":["themeConst","ThemeSwitch","useState","theme","setTheme","handleChangeTheme","themeValue","localStorage","setItem","document","body","classList","add","remove","className","title","onClick","icon","faMoon","size","faSun","Header","TodoAdd","addTodo","inputValue","setInputValue","type","placeholder","value","onChange","e","target","id","Date","isEdit","isComplete","color","Math","random","toString","substr","TodoList","todo","deleteTodo","completeTodo","editTodo","updatedValue","setUpdatedValue","style","backgroundColor","faCheck","faEdit","faTimesCircle","TodoContainer","todoList","setTodoList","filter","item","map","status","length","app","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b1299211.chunk.js","sourcesContent":["export const themeConst ={\n    dark : 'dark',\n    light : 'light'\n}\n","import ThemeSwitch from \"./ThemeSwitch\";\n\nexport default ThemeSwitch\n","import React, {useState} from 'react'\nimport {themeConst} from '../../utils/constants'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faMoon} from '@fortawesome/free-solid-svg-icons'\nimport {faSun} from '@fortawesome/free-regular-svg-icons'\n\nconst ThemeSwitch = () => {\n    const [theme, setTheme] = useState(themeConst.light)\n    const handleChangeTheme = (themeValue) =>{\n            setTheme(themeValue)\n            if (themeValue === themeConst.light){\n                // Store Theme value in your local storage\n                localStorage.setItem('Theme', 'light');\n                document.body.classList.add ('light-mode')\n                document.body.classList.remove('dark-mode')\n            }else {\n                // Store Theme value in your local storage\n                localStorage.setItem('Theme', 'light');\n                document.body.classList.add ('dark-mode')\n                document.body.classList.remove('light-mode')\n            }\n    }\n    return (\n        <div className='theme-container' title='Click to Switch Theme'>\n            {theme === themeConst.dark ?\n                <div className='light-theme' onClick={()=>handleChangeTheme(themeConst.light) }>\n                    <div className='icon'>\n                        <FontAwesomeIcon icon={faMoon} size='lg' />\n                    </div>\n                    <div className='label'>\n                        Dark Mode\n                    </div>\n                </div>:\n                    <div className='dark-theme' onClick={()=>handleChangeTheme(themeConst.dark) }>\n                <div className='icon'>\n                    <FontAwesomeIcon icon={faSun} size='lg' />\n                    </div>\n                    <div className='label'>\n                        Light Mode\n                    </div>\n                </div>\n            }\n            \n        </div>\n    )\n}\n\nexport default ThemeSwitch\n","import Header from './Header'\n\nexport default Header;\n","import React from 'react'\nimport ThemeSwitch from '../ThemeSwitch'\nconst Header = () => {\n    return (\n        <div className='header-container'>\n            <div className='logo-section'>\n                Todo App\n            </div>\n            <div className='theme-switcher'>\n                <ThemeSwitch/>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import TodoAdd  from \"./TodoAdd\";\n\nexport default TodoAdd\n","import React, {useState} from 'react'\n\nconst TodoAdd = ({addTodo}) => {\n    const [inputValue, setInputValue] = useState('')\n    return (\n        <div className='todo-add-container'>\n            <div className=\"todo-add-input-field\">\n                <input className=\"input\" type=\"text\" placeholder=\"Todo...\" value={inputValue} onChange={(e)=>{\n                    setInputValue(e.target.value)\n                }}/>\n                <button className=\"add-button\" onClick={()=>{\n                    setInputValue('');\n                    addTodo({\n                        id: new Date() + inputValue,\n                        title: inputValue,\n                        isEdit: false,\n                        isComplete: false,\n                        color: Math.random().toString(16).substr(-8)\n                    })\n                }} >Add</button>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoAdd\n","import TodoList from \"./TodoList\";\nexport default TodoList\n","import React, { useState } from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faEdit, faCheck, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nconst TodoList = ({todo, deleteTodo, completeTodo, editTodo}) => {\n    const [updatedValue, setUpdatedValue] = useState(todo.title)\n    return (\n        <div className='todo-list-container' style={{backgroundColor: `#${todo.color}`}}>\n        {\n            todo.isEdit?\n            <input className='input' type=\"text\" value={updatedValue} onChange={(e)=>{\n                setUpdatedValue(e.target.value)\n            }}/>:\n            <div className='title'>\n                {todo.isComplete ?\n                <s>\n                    {todo.title}\n                </s>:\n                <span>\n                {todo.title}\n                </span>\n                }\n                \n            </div>\n        }\n            <div className='todo-list-icons'>\n            {\n                todo.isEdit ?\n                <div className='complete'>\n                        <FontAwesomeIcon icon={faCheck} onClick={()=>{\n                            editTodo({...todo, title:updatedValue, isEdit: false})\n                        }} />\n                </div>:\n                <>\n                    <div className='complete'>\n                        <FontAwesomeIcon icon={faCheck} onClick={()=>{\n                            completeTodo(todo.id, true)\n                        }} />\n                    </div>\n                    <div className='edit'>\n                        <FontAwesomeIcon icon={faEdit} onClick={()=>{\n                            editTodo({...todo, isEdit:true})\n                        }}/>â€º\n                    </div>\n                    <div className='delete' onClick={()=>{\n                            deleteTodo(todo.id)}}>\n                        <FontAwesomeIcon icon={faTimesCircle}/>\n                    </div>\n                </>\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default TodoList\n","import TodoContainer from './TodoContainer'\nexport default TodoContainer\n","import React, {useState} from 'react'\nimport TodoAdd from './TodoAdd';\nimport TodoList from './TodoList';\nconst Todo = () => {\n    const [todoList, setTodoList] = useState([]);\n\n    const addTodo = (todo) =>{\n        setTodoList([...todoList, todo])\n    }\n    const deleteTodo = (id) =>{\n        setTodoList(todoList.filter((item => item.id !==id)))\n    }\n    const editTodo = (todo) =>{\n        setTodoList(todoList.map((item)=> todo.id === item.id ? todo:item))\n    }\n    const completeTodo = (id, status) =>{\n        setTodoList(todoList.map((item)=>{\n            return id === item.id ? {...item, isComplete:true}:item;\n        }))\n    }\n    return (\n        <div className='todo-container'>\n            <div className=\"add-section\">\n                <TodoAdd addTodo ={addTodo}/>\n            </div>\n            <div className=\"list-section\">\n            {todoList.length>0 && todoList.map((item)=>{\n                return  <TodoList key={item.id} todo={item} deleteTodo={deleteTodo} editTodo={editTodo} completeTodo={completeTodo}/>\n            })\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default Todo\n\n","import React from 'react'\nimport Header from './components/Header'\nimport TodoContainer from './components/TodoContainer'\nconst app = () => {\n    return (\n        <div className='app-container'>\n            <Header/>\n            <TodoContainer/>\n        </div>\n    )\n}\n\nexport default app\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.scss'\nimport App from './app'\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}